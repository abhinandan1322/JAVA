public class LL{

    Node head;

    public class Node{
        int data;
        Node next;

        Node(int data){
            this.data=data;
            this.next=null;
        }
    }

    public void add(int data){
        Node newNode = new Node(data);
        if(head==null){
            head=newNode;
            return;
        }
        newNode.next=head;
        head = newNode;
    }

    public void reverseList(){
        if(head==null || head.next==null){
            return;
        }

        Node preNode = head;
        Node currNode = head.next;
        while (currNode != null) {
            Node nextNode=currNode.next;
            currNode.next=preNode;
            preNode = currNode;
            currNode=nextNode; 
        }
        head.next = null;
        head = preNode;
    }

    public void printList(){
        if(head==null){
            System.out.println("List is empty.");
        }
        Node currNode = head;
        while (currNode != null) {
            System.out.print(currNode.data + " -> ");
            currNode=currNode.next;
        }
        System.out.println("NULL");
    }
    public static void main(String[] args){
        LL list = new LL();

        list.add(1);
        list.add(2);
        list.add(3);
        list.add(4);
        list.add(5);
        System.out.println("The original list is: ");
        list.printList();

        System.out.println("The reverse List is: ");
        list.reverseList();
        list.printList();
    }
}
