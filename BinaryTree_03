import java.util.LinkedList;
import java.util.Queue;

public class practice {

    public static class Node{
        int data;
        Node left;
        Node right;
        Node(int data){
            this.data=data;
            this.left=null;
            this.right=null;
        }
    }

    public static class BinaryTree {
        static int index=-1;
        public static Node buildTree(int nodes[]){
            index++;
            if(index>=nodes.length){
                return null;
            }
            if(nodes[index]==-1){
                return null;
            }

            Node newNode = new Node(nodes[index]);
            newNode.left=buildTree(nodes);
            newNode.right=buildTree(nodes);

            return newNode;
        }

        public static void preOrder(Node root){
            if(root==null){
                return;
            }
            System.out.print(root.data+" ");
            preOrder(root.left);
            preOrder(root.right);
        }

        
        
        public static int sumOfNodes(Node root){
            if(root==null){
                return 0;
            }
            return sumOfNodes(root.left)+sumOfNodes(root.right)+root.data;
        }

    }
    public static void main(String[] args) {
        int arr[]={1, 2, 4, -1, -1, 5, -1, -1, 3, 6, -1, -1, 7, -1, -1};
        BinaryTree.index=-1;
        BinaryTree tree = new BinaryTree();
        Node root = tree.buildTree(arr);

        System.out.println("PreOrder Traversal:");
        tree.preOrder(root);
        System.out.println();

        
        System.out.println("The sum of nodes are: " + tree.sumOfNodes(root));
        
    }
}
